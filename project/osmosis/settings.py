"""
Django settings for osmosis project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os, sys
#import dwollav2

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#sys.path.insert(0, os.path.join(BASE_DIR, 'osmosis'))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#TEMPLATE_DIRS = [os.path.join(BASE_DIR, 'templates')]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o$g37c3pn7z=0vx2y^&b2n*=qchs#-&3ecsz*7vo_58y&=6%7$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'jet',
    'django.contrib.auth',
    'osmosis.customauth',
    'django.contrib.admin',

    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    #'django_registration',
    #'registration',
    'rest_framework',
    'corsheaders',
  
    'osmosis.event',
    'osmosis.invite',
    'osmosis.reward',
     
    'osmosis.owner',
    'osmosis.onboarding',
    'osmosis.dashboard',
    'osmosis.app',  
    'osmosis.payment',
    'osmosis.program',
    'osmosis.action_type',
    'osmosis.action',
    'osmosis.metric',
    'osmosis.account',
    'osmosis.custom_admin',
    'osmosis.account.ledger',
    'osmosis.subscription',
    'osmosis.payout',
    'osmosis.inquery',
    #'djstripe',
    'rest_framework.authtoken',
    'Crypto',
    #'coreapi',
    'constance',
    'constance.backends.database',
    
)



MIDDLEWARE = (
    
    #'django.middleware.csrf.CsrfViewMiddleware',
    #'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.contrib.sessions.middleware.SessionMiddleware',
    #'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.common.CommonMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'osmosis.dashboard.middleware.DashboardMiddleware',


)

ROOT_URLCONF = 'osmosis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['osmosis/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'osmosis.wsgi.application'

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    
    'WELCOME_MESSAGE': ("", 'blurb message on webframe', str),
    
}


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
"""
from django.utils.log import DEFAULT_LOGGING
LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
        
    },
    'loggers': {
       
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
            'django.server': DEFAULT_LOGGING['loggers']['django.server'],
        },

    },
}
"""

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        },
        'null': {
            'class': 'logging.NullHandler',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'rangle': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': "rangle.log",
            'maxBytes': 1024 * 1024 * 10, #Max 10MB
            'backupCount': 3,
        },
        'payments': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': "payments.log",
            'maxBytes': 1024 * 1024 * 10, #Max 10MB
            'backupCount': 3,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'django.security': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'py.warnings': {
            'handlers': ['console'],
        },
        'rangle': {
            'handlers': ['rangle'],
            'level': 'INFO'
        },
        'payments': {
            'handlers': ['payments'],
            'level': 'INFO'
        },
    }
}   


AUTH_USER_MODEL = 'customauth.User'
"""
PAYPAL = {
    # Sandbox
    'API_ENDPOINT': 'https://api-3t.sandbox.paypal.com/nvp',
    'SIGNATURE_VALUES': {
        'USER': 'kira-test2_api1.sharemagnet.com',
        'PWD': 'U896H29Y9FPNRBWR',
        'SIGNATURE': 'AQBWQ0zhtgS56HOi5eidyf19DaylAPHvOUXbFQVIaXYDyDjE4lR0aMLa',
        'VERSION': '98'
    }
}
"""


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'osmosis/static'),

]

DWOLLA_KEY = "AkU5O6KsQWRVeizuy5EONjKZZ6N9QEVV35etQSIfepcudHCkiJ"
DWOLLA_SECRET = "axSuO6cIhIbJpXc9YMfJxlB4iVXnQnTcODEmQhYeBhLVkZwGo9"
DWOLLA_ENV = 'sandbox'

#PAYPAL_CLIENT_ID = 'AZkATODc5eo7GcVEPgPYdpFUJs63KA7iUZrAe8HN_MJScGvIL0vWLSzVtxOaVFyeUZMI9jjfIS599voF',
#PAYPAL_CLIENT_SECRET = 'EOv7J067fOWo8KFAiaNAAcPQq6o9Ry5zheZQGHNVOG2AXYsujP0c8GZFFzJiUU9mG66dWzZJ13IDh5HS'


PAYPAL_CLIENT_ID = 'AfqXkzYZnvYBrDe78hAy-OIgjgBTVK2Whi_sOj9LtbDM4NQGroA6nBh5fwiQnacj7R5vuvMvL-T88vep'
PAYPAL_CLIENT_SECRET = 'EM_8TsRLGt9pMr0GchRmI0aZlXNKB6gC-UoobNjvtQHPzN0OmljvLQ02jQduQCl6f792Mj5FTAafbiAk'

STRIPE_PUBLIC_KEY = 'pk_test_VRcpKlIyWtu8pZNfbTyrQuXY'
STRIPE_SECRET_KEY = 'sk_test_0zswpZoepH6U3Hic5wkrHwir0081CYPBMd'

#STRIPE_LIVE_PUBLIC_KEY = os.environ.get("STRIPE_LIVE_PUBLIC_KEY", "<your publishable key>")
#STRIPE_LIVE_SECRET_KEY = os.environ.get("STRIPE_LIVE_SECRET_KEY", "<your secret key>")
STRIPE_TEST_PUBLIC_KEY = 'pk_test_VRcpKlIyWtu8pZNfbTyrQuXY'
STRIPE_TEST_SECRET_KEY = 'sk_test_0zswpZoepH6U3Hic5wkrHwir0081CYPBMd'
STRIPE_LIVE_MODE = False

#STRIPE_SECRET_KEY = 'sk_test_0zswpZoepH6U3Hic5wkrHwir0081CYPBMd'
#STRIPE_PUBLISHABLE_KEY = 'pk_test_VRcpKlIyWtu8pZNfbTyrQuXY'

STRIPE_TEST_PUBLIC_KEY = 'pk_test_BDK0SwUzp7mzuUm3Jrx9xvAq00juMMLAOM'
STRIPE_PUBLISHABLE_KEY = 'pk_test_BDK0SwUzp7mzuUm3Jrx9xvAq00juMMLAOM'
STRIPE_SECRET_KEY = 'sk_test_Ad9aPWywUT4onphXUzhFNvMu00IUdUzTuw'


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_REPLACE_HTTPS_REFERER = True
X_FRAME_OPTIONS = 'ALLOWALL'

REST_FRAMEWORK = {
   'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
   ),
   
}

MAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "admin@appevate.com"
#EMAIL_HOST_PASSWORD = "lfn1k1taAP"
EMAIL_HOST_PASSWORD = 'Sholaris8$'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'osmosis/media')

try:
    from local_settings import *
except ImportError:
    pass



